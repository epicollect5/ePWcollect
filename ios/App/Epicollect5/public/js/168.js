"use strict";(self["webpackChunkuk_ac_imperial_epicollect_five_beta"]=self["webpackChunkuk_ac_imperial_epicollect_five_beta"]||[]).push([[168],{3168:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"startTapClick\": function() { return /* binding */ startTapClick; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6587);\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n\n\nconst startTapClick = (config) => {\n  let lastTouch = -MOUSE_WAIT * 10;\n  let lastActivated = 0;\n  let activatableEle;\n  let activeRipple;\n  let activeDefer;\n  const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n  const clearDefers = new WeakMap();\n  // Touch Events\n  const onTouchStart = (ev) => {\n    lastTouch = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.u)(ev);\n    pointerDown(ev);\n  };\n  const onTouchEnd = (ev) => {\n    lastTouch = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.u)(ev);\n    pointerUp(ev);\n  };\n  const onMouseDown = (ev) => {\n    const t = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.u)(ev) - MOUSE_WAIT;\n    if (lastTouch < t) {\n      pointerDown(ev);\n    }\n  };\n  const onMouseUp = (ev) => {\n    const t = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.u)(ev) - MOUSE_WAIT;\n    if (lastTouch < t) {\n      pointerUp(ev);\n    }\n  };\n  const onContextMenu = (ev) => {\n    pointerUp(ev);\n  };\n  const cancelActive = () => {\n    clearTimeout(activeDefer);\n    activeDefer = undefined;\n    if (activatableEle) {\n      removeActivated(false);\n      activatableEle = undefined;\n    }\n  };\n  const pointerDown = (ev) => {\n    if (activatableEle) {\n      return;\n    }\n    setActivatedElement(getActivatableTarget(ev), ev);\n  };\n  const pointerUp = (ev) => {\n    setActivatedElement(undefined, ev);\n  };\n  const setActivatedElement = (el, ev) => {\n    // do nothing\n    if (el && el === activatableEle) {\n      return;\n    }\n    clearTimeout(activeDefer);\n    activeDefer = undefined;\n    const { x, y } = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.q)(ev);\n    // deactivate selected\n    if (activatableEle) {\n      if (clearDefers.has(activatableEle)) {\n        throw new Error('internal error');\n      }\n      if (!activatableEle.classList.contains(ACTIVATED)) {\n        addActivated(activatableEle, x, y);\n      }\n      removeActivated(true);\n    }\n    // activate\n    if (el) {\n      const deferId = clearDefers.get(el);\n      if (deferId) {\n        clearTimeout(deferId);\n        clearDefers.delete(el);\n      }\n      const delay = isInstant(el) ? 0 : ADD_ACTIVATED_DEFERS;\n      el.classList.remove(ACTIVATED);\n      activeDefer = setTimeout(() => {\n        addActivated(el, x, y);\n        activeDefer = undefined;\n      }, delay);\n    }\n    activatableEle = el;\n  };\n  const addActivated = (el, x, y) => {\n    lastActivated = Date.now();\n    el.classList.add(ACTIVATED);\n    const rippleEffect = useRippleEffect && getRippleEffect(el);\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (rippleEffect && rippleEffect.addRipple) {\n      removeRipple();\n      activeRipple = rippleEffect.addRipple(x, y);\n    }\n  };\n  const removeRipple = () => {\n    if (activeRipple !== undefined) {\n      activeRipple.then((remove) => remove());\n      activeRipple = undefined;\n    }\n  };\n  const removeActivated = (smooth) => {\n    removeRipple();\n    const active = activatableEle;\n    if (!active) {\n      return;\n    }\n    const time = CLEAR_STATE_DEFERS - Date.now() + lastActivated;\n    if (smooth && time > 0 && !isInstant(active)) {\n      const deferId = setTimeout(() => {\n        active.classList.remove(ACTIVATED);\n        clearDefers.delete(active);\n      }, CLEAR_STATE_DEFERS);\n      clearDefers.set(active, deferId);\n    }\n    else {\n      active.classList.remove(ACTIVATED);\n    }\n  };\n  const doc = document;\n  doc.addEventListener('ionGestureCaptured', cancelActive);\n  doc.addEventListener('touchstart', onTouchStart, true);\n  doc.addEventListener('touchcancel', onTouchEnd, true);\n  doc.addEventListener('touchend', onTouchEnd, true);\n  /**\n   * Tap click effects such as the ripple effect should\n   * not happen when scrolling. For example, if a user scrolls\n   * the page but also happens to do a touchstart on a button\n   * as part of the scroll, the ripple effect should not\n   * be dispatched. The ripple effect should only happen\n   * if the button is activated and the page is not scrolling.\n   *\n   * pointercancel is dispatched on a gesture when scrolling\n   * starts, so this lets us avoid having to listen for\n   * ion-content's scroll events.\n   */\n  doc.addEventListener('pointercancel', cancelActive, true);\n  doc.addEventListener('mousedown', onMouseDown, true);\n  doc.addEventListener('mouseup', onMouseUp, true);\n  doc.addEventListener('contextmenu', onContextMenu, true);\n};\nconst getActivatableTarget = (ev) => {\n  if (ev.composedPath) {\n    /**\n     * composedPath returns EventTarget[]. However,\n     * objects other than Element can be targets too.\n     * For example, AudioContext can be a target. In this\n     * case, we know that the event is a UIEvent so we\n     * can assume that the path will contain either Element\n     * or ShadowRoot.\n     */\n    const path = ev.composedPath();\n    for (let i = 0; i < path.length - 2; i++) {\n      const el = path[i];\n      if (!(el instanceof ShadowRoot) && el.classList.contains('ion-activatable')) {\n        return el;\n      }\n    }\n  }\n  else {\n    return ev.target.closest('.ion-activatable');\n  }\n};\nconst isInstant = (el) => {\n  return el.classList.contains('ion-activatable-instant');\n};\nconst getRippleEffect = (el) => {\n  if (el.shadowRoot) {\n    const ripple = el.shadowRoot.querySelector('ion-ripple-effect');\n    if (ripple) {\n      return ripple;\n    }\n  }\n  return el.querySelector('ion-ripple-effect');\n};\nconst ACTIVATED = 'ion-activated';\nconst ADD_ACTIVATED_DEFERS = 200;\nconst CLEAR_STATE_DEFERS = 200;\nconst MOUSE_WAIT = 2500;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3168\n")}}]);